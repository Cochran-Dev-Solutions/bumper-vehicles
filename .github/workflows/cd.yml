name: CD

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build backend image
        run: |
          docker build -f apps/server/Dockerfile -t bumper-backend:latest .

      - name: Save backend image to tarball
        run: |
          docker save bumper-backend:latest | gzip > backend.tar.gz

      - name: Prepare SSH key (Vultr)
        env:
          SSH_PRIVATE_KEY: ${{ secrets.VULTR_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/vultr_key
          chmod 600 ~/.ssh/vultr_key
          ssh-keyscan -p ${{ secrets.VULTR_SSH_PORT }} ${{ secrets.VULTR_HOST }} >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: Upload image to server
        env:
          SERVER_HOST: ${{ secrets.VULTR_HOST }}
          SERVER_USER: ${{ secrets.VULTR_SSH_USER }}
          SERVER_PORT: ${{ secrets.VULTR_SSH_PORT }}
          SERVER_COMPOSE_DIR: ${{ secrets.SERVER_COMPOSE_DIR }}
        run: |
          scp -P $SERVER_PORT -i ~/.ssh/vultr_key -o StrictHostKeyChecking=no backend.tar.gz $SERVER_USER@$SERVER_HOST:$SERVER_COMPOSE_DIR/backend.tar.gz

      - name: Remote deploy (docker load && compose up -d)
        env:
          SERVER_HOST: ${{ secrets.VULTR_HOST }}
          SERVER_USER: ${{ secrets.VULTR_SSH_USER }}
          SERVER_PORT: ${{ secrets.VULTR_SSH_PORT }}
          SERVER_COMPOSE_DIR: ${{ secrets.SERVER_COMPOSE_DIR }}
        run: |
          ssh -i ~/.ssh/vultr_key -p $SERVER_PORT -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST 'set -euo pipefail; cd '"$SERVER_COMPOSE_DIR"'; echo "PWD: $(pwd)"; ls -la; COMPOSE_FILE=docker-compose.yml; if [ ! -f "$COMPOSE_FILE" ]; then if [ -f docker-compose.yaml ]; then COMPOSE_FILE=docker-compose.yaml; else echo "No docker-compose.yml or docker-compose.yaml found"; ls -la; exit 1; fi; fi; docker load -i backend.tar.gz; sed -i "s|image: .*backend:latest|image: bumper-backend:latest|" "$COMPOSE_FILE" || true; docker compose -f "$COMPOSE_FILE" up -d; rm -f backend.tar.gz; docker system prune -f || true'

  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - run: pnpm install
      - name: Build web-client
        env:
          VITE_PROD_API_URL: ${{ secrets.VITE_PROD_API_URL }}
        run: pnpm -F game-frontend build
      - name: Prepare SSH key (shared)
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SITEGROUND_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/site_key
          chmod 600 ~/.ssh/site_key
          ssh-keyscan -p ${{ secrets.SITEGROUND_SSH_PORT }} ${{ secrets.SITEGROUND_HOST }} >> ~/.ssh/known_hosts 2>/dev/null || true
      - name: Deploy web-client via rsync (includes hidden files)
        env:
          SERVER_HOST: ${{ secrets.SITEGROUND_HOST }}
          SERVER_USER: ${{ secrets.SITEGROUND_APP_SSH_USER }}
          SERVER_PORT: ${{ secrets.SITEGROUND_SSH_PORT }}
          REMOTE_PATH: ${{ secrets.SITEGROUND_APP_PATH }}
        run: |
          rsync -az --delete -e "ssh -i ~/.ssh/site_key -p $SERVER_PORT -o StrictHostKeyChecking=no" apps/web-client/dist/ $SERVER_USER@$SERVER_HOST:$REMOTE_PATH/

  deploy-landing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - run: pnpm install
      - name: Build landing-page
        run: pnpm -F landing-page build
      - name: Prepare SSH key (shared)
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SITEGROUND_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/site_key
          chmod 600 ~/.ssh/site_key
          ssh-keyscan -p ${{ secrets.SITEGROUND_SSH_PORT }} ${{ secrets.SITEGROUND_HOST }} >> ~/.ssh/known_hosts 2>/dev/null || true
      - name: Deploy landing-page via rsync (includes hidden files)
        env:
          SERVER_HOST: ${{ secrets.SITEGROUND_HOST }}
          SERVER_USER: ${{ secrets.SITEGROUND_LANDING_SSH_USER }}
          SERVER_PORT: ${{ secrets.SITEGROUND_SSH_PORT }}
          REMOTE_PATH: ${{ secrets.SITEGROUND_LANDING_PATH }}
        run: |
          rsync -az --delete -e "ssh -i ~/.ssh/site_key -p $SERVER_PORT -o StrictHostKeyChecking=no" apps/landing-page/dist/ $SERVER_USER@$SERVER_HOST:$REMOTE_PATH/
